{"version":3,"sources":["utils.js","Component/Homepage.js","Component/404.js","Component/Transaction.js","Layout.js","App.js","index.js"],"names":["CurrencyContext","createContext","gridStyle","width","textAlign","useContext","value","setValue","currency","title","style","paddingBottom","map","el","Grid","key","Item","label","min","defaultValue","onChange","event","e","temp","className","to","status","subTitle","extra","type","initialState","useState","loading","setLoading","billAmount","setAmount","paidAmount","setPaidAmount","totalAmount","setTotalAmount","display","message","description","result","setResult","setupCurrency","useCallback","useEffect","array","total","calculateTotal","showIcon","closable","onClose","padding","onClick","totalCurrency","remainingAmount","push","aCount","Map","Set","x","filter","y","length","resultString","get","Layout","exact","path","Homepage","Transaction","App","provider","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a834f967.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport const CurrencyContext = createContext();\r\n\r\n","import React, { useContext } from 'react';\r\nimport { InputNumber, Button, Form, Card } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { CurrencyContext } from '../utils';\r\nconst gridStyle = {\r\n    width: '25%',\r\n    textAlign: 'center',\r\n};\r\n\r\n\r\nexport default () => {\r\n    const { value, setValue, currency } = useContext(CurrencyContext);\r\n    const onChange = (e, el) => {\r\n        const temp = value\r\n        temp[el] = e\r\n        setValue(temp)\r\n    }\r\n    return (\r\n        <div>\r\n            <Card title='Add Initial Amount' style={{ textAlign: 'center', paddingBottom: '20px' }}>\r\n                <Form >{\r\n                    currency.map((el) => {\r\n                        return (\r\n\r\n                            <Card.Grid style={gridStyle} key={el}>\r\n                                <Form.Item label={el} >\r\n                                    <InputNumber min={0} defaultValue={value[el]} onChange={(event) => { onChange(event, el) }}>\r\n                                    </InputNumber>\r\n                                </Form.Item>\r\n                            </Card.Grid>\r\n\r\n\r\n                        )\r\n                    })\r\n\r\n                }\r\n                </Form>\r\n            </Card>\r\n            <div className='center'>\r\n                <Button className='center'><Link to='/transaction'>Next</Link></Button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n\r\n}","import React from 'react';\r\nimport { Result, Button } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nexport default () => {\r\n    return (\r\n        <Result\r\n            status=\"404\"\r\n            title=\"404\"\r\n            subTitle=\"Sorry, the page you visited does not exist.\"\r\n            extra={<Button type=\"primary\"><Link to='/'>Back Home</Link></Button>}\r\n        />\r\n    )\r\n}","import React, { useState, useContext, useEffect, useCallback } from 'react'\r\nimport { InputNumber, Skeleton, Button, Card, Form, Alert } from 'antd'\r\n\r\nimport { CurrencyContext } from '../utils';\r\nimport FormItem from 'antd/lib/form/FormItem';\r\n\r\nconst initialState = {}\r\n\r\nexport default () => {\r\n    const [loading, setLoading] = useState(true);\r\n    const { currency, value } = useContext(CurrencyContext)\r\n    const [billAmount, setAmount] = useState(0)\r\n    const [paidAmount, setPaidAmount] = useState({})\r\n    const [totalAmount, setTotalAmount] = useState(0)\r\n    const [result, setResult] = useState({ display: false, message: '', description: '', type: '' })\r\n    const setupCurrency = useCallback(() => {\r\n        currency.map((value) => initialState[value] = 0)\r\n    }, [currency])\r\n    useEffect(() => {\r\n        setupCurrency();\r\n        setPaidAmount(initialState)\r\n        setLoading(false)\r\n    }, [setupCurrency])\r\n    const calculateTotal = (array) => {\r\n        let total = 0;\r\n        currency.map((value) => total = total + value * array[value])\r\n        return total\r\n    }\r\n    const onChange = (e, el) => {\r\n        const temp = paidAmount\r\n        temp[el] = e\r\n        setPaidAmount(temp)\r\n        setTotalAmount(calculateTotal(paidAmount))\r\n\r\n    }\r\n    const calculateChange = () => {\r\n        let totalCurrency = {}\r\n        currency.map((el) => totalCurrency[el] = value[el] + paidAmount[el])\r\n        if (billAmount - totalAmount < 0) {\r\n            let remainingAmount = totalAmount - billAmount\r\n            let result = []\r\n            currency.map((el) => {\r\n                while (remainingAmount >= el && totalCurrency[el] > 0 && remainingAmount > 0) {\r\n                    remainingAmount -= el\r\n                    result.push(el)\r\n                    totalCurrency[el] -= 1\r\n                }\r\n                return null\r\n            })\r\n            if (remainingAmount === 0) {\r\n                const aCount = new Map([...new Set(result)].map(\r\n                    x => [x, result.filter(y => y === x).length]\r\n                ));\r\n                let resultString = 'Return '\r\n                currency.map((el) => {\r\n                    if (aCount.get(el)) {\r\n                        resultString += `Rs ${el} x ${aCount.get(el)}, `\r\n                    }\r\n                    return null\r\n                })\r\n                setResult({ display: true, message: 'Change Available', description: resultString, type: 'success' })\r\n\r\n            }\r\n            else {\r\n                setResult({ display: true, message: 'No Change Available', description: 'Not enough money for transaction', type: 'error' })\r\n            }\r\n        }\r\n        else if (billAmount === totalAmount) {\r\n            setResult({ display: true, message: 'Exact Amount', description: 'No change to be returned', type: 'success' })\r\n        }\r\n        else {\r\n            setResult({ display: true, message: 'Please Pay more', description: 'Bill Amount is larger than Amount Recieved', type: 'error' })\r\n\r\n        }\r\n    }\r\n    if (loading) {\r\n        return <Skeleton />\r\n    }\r\n    else {\r\n        return (<div>\r\n            {result.display ? <Alert\r\n                message={result.message}\r\n                description={result.description}\r\n                type={result.type}\r\n                showIcon\r\n                closable\r\n                onClose={(e) => { setResult({ display: false, message: '', description: '', type: '' }) }}\r\n            /> : ''}\r\n\r\n            <Form style={{ padding: '24px', paddingBottom: '0px' }}>\r\n                <FormItem label='Bill Amount'>\r\n                    <InputNumber min={0} defaultValue={0} onChange={(event) => { setAmount(event) }}></InputNumber>\r\n                </FormItem>\r\n            </Form>\r\n            <Card title={`Amount Received  ${totalAmount}`}>\r\n                <Form>\r\n                    {\r\n                        currency.map((el) => {\r\n                            return (\r\n                                <Card.Grid key={el}>\r\n                                    <Form.Item label={el}>\r\n                                        <InputNumber min={0} defaultValue={0} onChange={(event) => { onChange(event, el) }}>\r\n                                        </InputNumber>\r\n                                    </Form.Item>\r\n                                </Card.Grid>\r\n                            )\r\n                        })\r\n                    }\r\n                </Form>\r\n            </Card>\r\n            <div className='center'>\r\n                <Button onClick={calculateChange}>Calculate Change</Button>\r\n            </div>\r\n\r\n        </div>)\r\n    }\r\n\r\n}","import React from 'react';\r\nimport { HashRouter, Switch, Route } from 'react-router-dom';\r\n\r\n\r\nimport Homepage from './Component/Homepage';\r\nimport Handle404 from './Component/404';\r\nimport Transaction from './Component/Transaction';\r\n\r\n\r\nfunction Layout() {\r\n\r\n    return (\r\n        <HashRouter>\r\n            <Switch>\r\n                <Route exact path='/' ><Homepage /></Route>\r\n                <Route exact path='/transaction'><Transaction /></Route>\r\n                <Route >\r\n                    <Handle404 />\r\n                </Route>\r\n            </Switch>\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default Layout;\r\n","import React, { useState, useEffect } from 'react';\n\nimport Layout from './Layout';\nimport { CurrencyContext } from './utils';\nimport { Skeleton } from 'antd';\nconst currency = [2000, 500, 200, 100, 50, 20, 10, 5, 2, 1]\nlet initialState = {}\n\nconst setupCurrency = () => {\n  currency.map((value) => initialState[value] = 0)\n}\n\nfunction App() {\n  const [loading, setLoading] = useState(true);\n  const [value, setValue] = useState()\n  useEffect(() => {\n    setupCurrency();\n    setValue(initialState)\n    setLoading(false)\n  }, [])\n  const provider = {\n    value: value,\n    setValue: setValue,\n    currency: currency,\n  }\n  return (\n    <CurrencyContext.Provider value={provider}>\n      {loading ? <Skeleton /> : <Layout />}\n    </CurrencyContext.Provider>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nimport App from './App';\nimport 'antd/dist/antd.css'\nimport './index.css'\n\nReactDOM.render(\n  <App />\n  ,\n  document.getElementById('⚛️')\n);\n\n"],"sourceRoot":""}